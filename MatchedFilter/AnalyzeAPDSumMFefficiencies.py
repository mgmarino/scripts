import ROOT,sys
from array import array

if len(sys.argv) != 2:
  print("usage: "+sys.argv[0]+" EfficiencyFile")
  sys.exit(1)

windows = set()
thresholds = set()

f = ROOT.TFile(sys.argv[1])
t = f.Get("EffTree")
t.SetEstimate(t.GetEntries())
t.Draw("win","","goff")
for i in range(t.GetSelectedRows()):
  windows.add(t.GetV1().__getitem__(i))
t.Draw("thresh","","goff")
for i in range(t.GetSelectedRows()):
  thresholds.add(t.GetV1().__getitem__(i))

thresholds = list(sorted(thresholds))
windows = list(sorted(windows))

histNorth2D = ROOT.TH2D("histNorth2D","Probability product North plane",len(thresholds),array('d',thresholds+[2*thresholds[-1]-thresholds[-2]]),len(windows),array('d',windows+[2*windows[-1]-windows[-2]]))
histNorth2D.GetXaxis().SetTitle("Threshold factor")
histNorth2D.GetYaxis().SetTitle("Smoothing window")
histSouth2D = ROOT.TH2D("histSouth2D","Probability product South plane",len(thresholds),array('d',thresholds+[2*thresholds[-1]-thresholds[-2]]),len(windows),array('d',windows+[2*windows[-1]-windows[-2]]))
histSouth2D.GetXaxis().SetTitle("Threshold factor")
histSouth2D.GetYaxis().SetTitle("Smoothing window")

histNorthFinding2D = ROOT.TH2D("histNorthFinding2D","Probability of finding no signal North plane",len(thresholds),array('d',thresholds+[2*thresholds[-1]-thresholds[-2]]),len(windows),array('d',windows+[2*windows[-1]-windows[-2]]))
histNorthFinding2D.GetXaxis().SetTitle("Threshold factor")
histNorthFinding2D.GetYaxis().SetTitle("Smoothing window")
histSouthFinding2D = ROOT.TH2D("histSouthFinding2D","Probability of finding no signal South plane",len(thresholds),array('d',thresholds+[2*thresholds[-1]-thresholds[-2]]),len(windows),array('d',windows+[2*windows[-1]-windows[-2]]))
histSouthFinding2D.GetXaxis().SetTitle("Threshold factor")
histSouthFinding2D.GetYaxis().SetTitle("Smoothing window")

histNorthAdditional2D = ROOT.TH2D("histNorthAdditional2D","Probability of finding additional signal North plane",len(thresholds),array('d',thresholds+[2*thresholds[-1]-thresholds[-2]]),len(windows),array('d',windows+[2*windows[-1]-windows[-2]]))
histNorthAdditional2D.GetXaxis().SetTitle("Threshold factor")
histNorthAdditional2D.GetYaxis().SetTitle("Smoothing window")
histSouthAdditional2D = ROOT.TH2D("histSouthAdditional2D","Probability of finding additional signal South plane",len(thresholds),array('d',thresholds+[2*thresholds[-1]-thresholds[-2]]),len(windows),array('d',windows+[2*windows[-1]-windows[-2]]))
histSouthAdditional2D.GetXaxis().SetTitle("Threshold factor")
histSouthAdditional2D.GetYaxis().SetTitle("Smoothing window")

outfile = ROOT.TFile("EffAnalyzed.root","RECREATE")
for i,threshold in enumerate(sorted(thresholds)):
  for j,window in enumerate(sorted(windows)):
    histFoundNorthName = ("histAdditionalNorthT"+str(threshold)+"W"+str(window)).replace(".","p")
    histAllNorthName = ("histAllNorthT"+str(threshold)+"W"+str(window)).replace(".","p")
    histNoneNorthName = ("histNoneNorthT"+str(threshold)+"W"+str(window)).replace(".","p")
    histFoundSouthName = ("histAdditionalSouthT"+str(threshold)+"W"+str(window)).replace(".","p")
    histAllSouthName = ("histAllSouthT"+str(threshold)+"W"+str(window)).replace(".","p")
    histNoneSouthName = ("histNoneSouthT"+str(threshold)+"W"+str(window)).replace(".","p")
    histargs = "(100,0,15000)"
    t.Draw("energy>>"+histAllNorthName+histargs,"chan == -1 && thresh == "+str(threshold)+" && win == "+str(window),"goff")
    t.Draw("energy>>"+histAllSouthName+histargs,"chan == -2 && thresh == "+str(threshold)+" && win == "+str(window),"goff")
    t.Draw("energy>>"+histFoundNorthName+histargs,"chan == -1 && nsc > 1 && thresh == "+str(threshold)+" && win == "+str(window),"goff")
    t.Draw("energy>>"+histFoundSouthName+histargs,"chan == -2 && nsc > 1 && thresh == "+str(threshold)+" && win == "+str(window),"goff")
    t.Draw("energy>>"+histNoneNorthName+histargs,"chan == -1 && nsc == 0 && thresh == "+str(threshold)+" && win == "+str(window),"goff")
    t.Draw("energy>>"+histNoneSouthName+histargs,"chan == -2 && nsc == 0 && thresh == "+str(threshold)+" && win == "+str(window),"goff")
    histAllNorth = ROOT.gDirectory.Get(histAllNorthName)
    histAllSouth = ROOT.gDirectory.Get(histAllSouthName)
    histFoundNorth = ROOT.gDirectory.Get(histFoundNorthName)
    histFoundSouth = ROOT.gDirectory.Get(histFoundSouthName)
    NorthAdditionalEfficiency = float(histFoundNorth.GetEntries())/histAllNorth.GetEntries()
    SouthAdditionalEfficiency = float(histFoundSouth.GetEntries())/histAllSouth.GetEntries()
    histNoneNorth = ROOT.gDirectory.Get(histNoneNorthName)
    histNoneSouth = ROOT.gDirectory.Get(histNoneSouthName)
    NorthNotFoundEfficiency = float(histNoneNorth.GetEntries())/histAllNorth.GetEntries()
    SouthNotFoundEfficiency = float(histNoneSouth.GetEntries())/histAllSouth.GetEntries()
    histNorth2D.SetBinContent(i+1,j+1,NorthAdditionalEfficiency*NorthNotFoundEfficiency)
    histSouth2D.SetBinContent(i+1,j+1,SouthAdditionalEfficiency*SouthNotFoundEfficiency)
    histNorthFinding2D.SetBinContent(i+1,j+1,NorthNotFoundEfficiency)
    histSouthFinding2D.SetBinContent(i+1,j+1,SouthNotFoundEfficiency)
    histNorthAdditional2D.SetBinContent(i+1,j+1,NorthAdditionalEfficiency)
    histSouthAdditional2D.SetBinContent(i+1,j+1,SouthAdditionalEfficiency)
    histFoundNorth.Divide(histAllNorth)
    histFoundNorth.SetTitle("Probability of finding an additional signal North plane")
    histFoundNorth.Write()
    histFoundSouth.Divide(histAllSouth)
    histFoundSouth.SetTitle("Probability of finding an additional signal South plane")
    histFoundSouth.Write()
    histNoneNorth.Divide(histAllNorth)
    histNoneNorth.SetTitle("Probability of finding no signal North plane")
    histNoneNorth.Write()
    histNoneSouth.Divide(histAllSouth)
    histNoneSouth.SetTitle("Probability of finding no signal South plane")
    histNoneSouth.Write()
histNorth2D.Write()
histSouth2D.Write()
histNorthFinding2D.Write()
histSouthFinding2D.Write()
histNorthAdditional2D.Write()
histSouthAdditional2D.Write()
outfile.Close()
